{"ast":null,"code":"import _objectSpread from \"/home/biswanath/programming/python/fullthrottle/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/biswanath/programming/python/fullthrottle/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport Autosuggest from 'react-autosuggest';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: \"\",\n      resPonse: [\"a\", \"b\"]\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      word\n    }) => {\n      this.setState({\n        suggestions: this.getWords(word)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.getWords = word => {\n      axios({\n        method: 'GET',\n        url: \"http://127.0.0.1:8000/api/?search=\" + word,\n        //Development\n        headers: {\n          \"Content-Type\": 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          console.log(res);\n          this.setState(_objectSpread({}, this.state, {\n            resPonse: res.data\n          }));\n        }\n      }).catch(err => {\n        console.error(err.response);\n      });\n    };\n\n    this.onWordChange = (e, {\n      newValue\n    }) => {\n      this.setState(_objectSpread({}, this.state, {\n        word: newValue\n      }));\n    };\n  }\n\n  render() {\n    const inputProps = {\n      placeholder: 'Type a programming language',\n      word,\n      onChange: this.onWordChange\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"word-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Word\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.word,\n      name: \"word\",\n      id: \"word-search\",\n      onChange: this.onWordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Autosuggest, {\n      suggestions: this.state.resPonse,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/biswanath/programming/python/fullthrottle/frontend/src/App.js"],"names":["React","Component","axios","Autosuggest","App","state","word","resPonse","onSuggestionsFetchRequested","setState","suggestions","getWords","onSuggestionsClearRequested","method","url","headers","then","res","status","console","log","data","catch","err","error","response","onWordChange","e","newValue","render","inputProps","placeholder","onChange","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BI,KAF0B,GAEpB;AACJC,MAAAA,IAAI,EAAC,EADD;AAEJC,MAAAA,QAAQ,EAAC,CAAC,GAAD,EAAM,GAAN;AAFL,KAFoB;;AAAA,SAO1BC,2BAP0B,GAOI,CAAC;AAAEF,MAAAA;AAAF,KAAD,KAAc;AAC1C,WAAKG,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE,KAAKC,QAAL,CAAcL,IAAd;AADD,OAAd;AAGD,KAXyB;;AAAA,SAa1BM,2BAb0B,GAaI,MAAM;AAClC,WAAKH,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAjByB;;AAAA,SAmB1BC,QAnB0B,GAmBdL,IAAD,IAAS;AAClBJ,MAAAA,KAAK,CAAC;AACJW,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,GAAG,EAAE,uCAAqCR,IAFtC;AAE4C;AAChDS,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,oBAAU;AAFH;AAHL,OAAD,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAE;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAa,GAAjB,EAAqB;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,eAAKR,QAAL,mBACK,KAAKJ,KADV;AAEEE,YAAAA,QAAQ,EAACU,GAAG,CAACI;AAFf;AAID;AACF,OAfD,EAeGC,KAfH,CAeSC,GAAG,IAAE;AACZJ,QAAAA,OAAO,CAACK,KAAR,CAAcD,GAAG,CAACE,QAAlB;AACD,OAjBD;AAkBD,KAtCyB;;AAAA,SAwC1BC,YAxC0B,GAwCX,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAoB;AACjC,WAAKnB,QAAL,mBACK,KAAKJ,KADV;AAEEC,QAAAA,IAAI,EAACsB;AAFP;AAKD,KA9CyB;AAAA;;AAiD1BC,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG;AACjBC,MAAAA,WAAW,EAAE,6BADI;AAEjBzB,MAAAA,IAFiB;AAGjB0B,MAAAA,QAAQ,EAAE,KAAKN;AAHE,KAAnB;AAKA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAW3B,IAArC;AAA2C,MAAA,IAAI,EAAC,MAAhD;AAAuD,MAAA,EAAE,EAAC,aAA1D;AAAwE,MAAA,QAAQ,EAAE,KAAKoB,YAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,WAAD;AACA,MAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWE,QADxB;AAEA,MAAA,2BAA2B,EAAE,KAAKC,2BAFlC;AAGA,MAAA,2BAA2B,EAAE,KAAKI,2BAHlC;AAIA,MAAA,UAAU,EAAEkB,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAYD;;AAnEyB;;AAyE5B,eAAe1B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport Autosuggest from 'react-autosuggest';\nclass App extends Component {\n\n  state={\n    word:\"\",\n    resPonse:[\"a\", \"b\"],\n  }\n\n  onSuggestionsFetchRequested = ({ word }) => {\n    this.setState({\n      suggestions: this.getWords(word)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  getWords = (word) =>{\n    axios({\n      method: 'GET',\n      url: \"http://127.0.0.1:8000/api/?search=\"+word, //Development\n      headers: {\n        \"Content-Type\": 'application/json',\n        'Accept': 'application/json',\n      },\n    }).then(res=>{\n      if (res.status===200){\n        console.log(res)\n        this.setState({\n          ...this.state,\n          resPonse:res.data,\n        })\n      }\n    }).catch(err=>{\n      console.error(err.response)\n    })\n  }\n\n  onWordChange = (e, { newValue }) =>{\n    this.setState({\n      ...this.state,\n      word:newValue\n    })\n\n  }\n  \n\n  render() {\n    const inputProps = {\n      placeholder: 'Type a programming language',\n      word,\n      onChange: this.onWordChange\n    };\n    return(\n      <div >\n        <label htmlFor=\"word-search\">Word</label>\n        <input type=\"text\" value={this.props.word} name=\"word\" id=\"word-search\" onChange={this.onWordChange}/>\n        <Autosuggest\n        suggestions={this.state.resPonse}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        inputProps={inputProps}\n      />\n      </div>\n    )\n  }\n}\n\n  \n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}